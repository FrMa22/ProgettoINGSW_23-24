@startuml

scale 3
package com.example.progettoingsw.view.venditore {
    class VenditoreAstaInglese {
        - creaAstaIngleseViewModel: CreaAstaIngleseViewModel
        - bottoneConferma: AppCompatButton
        - bottoneBack: ImageButton
        - bottone_info: ImageButton
        - nome: EditText
        - imageButtonRimuoviImmagineCreaAstaInglese: ImageButton
        - descrizione: EditText
        - baseAsta: EditText
        - intervalloAsta: EditText
        - rialzoAsta: EditText
        - bitmap: Bitmap
        - controller: Controller
        - immagineProdotto: ImageView
        - bottoneInserisciImmagine: ImageButton
        - listaCategorieScelte: ArrayList<String>
        - resultLauncher: ActivityResultLauncher<Intent>
        - bottoneCategorieAstaInglese: MaterialButton
        - progressBarVenditoreAstaInglese: ProgressBar
        - relativeLayoutAstaInglese: RelativeLayout
        + onCreate(savedInstanceState: Bundle): void
        + osservaAstaCreataPopUp(): void
        + osservaTornaIndietro(): void
        + osservaApriPopUpInformazioni(): void
        + osservaCreaPopUpInformazioni(): void
        + osservaApriPopUpCategorie(): void
        + osservaAstaCreata(): void
        + osservaErroreNome(): void
        + osservaErroreDescrizione(): void
        + osservaErroreBaseAsta(): void
        + osservaErroreIntervallo(): void
        + osservaErroreSogliaRialzoMinimo(): void
        + osservaErroreGenerico(): void
        + osservaApriGalleria(): void
        + osservaImmagineConvertita(): void
        - prelevaImmagine(): void
        - registraRisultati(): void
    }
    class PopUpAggiungiCategorieAsta {
            - linear_layout_categorie_crea_asta: LinearLayout
            - mContext: Context
            - resources: Resources
            - fragmentCreaAstaInversa: FragmentCreaAstaInversa
            - venditoreAstaInglese: VenditoreAstaInglese
            - venditoreAstaRibasso: VenditoreAstaRibasso
            - buttonSalvaCategorieCreaAsta: Button
            - buttonAnnullaCategorieCreaAsta: Button
            - creaAstaInversaViewModel: CreaAstaInversaViewModel
            - creaAstaIngleseViewModel: CreaAstaIngleseViewModel
            - creaAstaRibassoViewModel: CreaAstaRibassoViewModel
            + PopUpAggiungiCategorieAsta(context: Context, fragmentCreaAstaInversa: FragmentCreaAstaInversa,
            creaAstaInversaViewModel: CreaAstaInversaViewModel)
            + PopUpAggiungiCategorieAsta(context: Context, venditoreAstaInglese: VenditoreAstaInglese,
             creaAstaIngleseViewModel: CreaAstaIngleseViewModel)
            + PopUpAggiungiCategorieAsta(context: Context, venditoreAstaRibasso: VenditoreAstaRibasso,
             creaAstaRibassoViewModel: CreaAstaRibassoViewModel)
            + onCreate(savedInstanceState: Bundle): void
            + onClick(view: View): void
            - populateLinearLayout(): void
            - selectCategories(categorieInserite: ArrayList<String>): void
            - rimuoviOsservatori(): void
            + osservaCategorieInserite(): void
        }
}

package com.example.progettoingsw.viewmodel {
    class CreaAstaIngleseViewModel {
        - repository: Repository
        - astaAllingleseRepository: Asta_allingleseRepository
        - uriImmagine: Uri
        - categorieScelte: ArrayList<String>
        - categorieScelteProvvisorie: ArrayList<String>
        - apriPopUpCategoria: MutableLiveData<Boolean>
        - erroreNome: MutableLiveData<String>
        - erroreDescrizione: MutableLiveData<String>
        - erroreBaseAsta: MutableLiveData<String>
        - erroreSogliaRialzoMinimo: MutableLiveData<String>
        - erroreGenerico: MutableLiveData<String>
        - erroreIntervallo: MutableLiveData<String>
        - apriGalleria: MutableLiveData<Intent>
        - astaCreata: MutableLiveData<Boolean>
        - categorieInserite: MutableLiveData<ArrayList<String>>
        - popUpInformazioni: MutableLiveData<AlertDialog>
        - apriPopUpInformazioni: MutableLiveData<Boolean>
        - immagineConvertita: MutableLiveData<Bitmap>
        - tornaIndietro: MutableLiveData<Boolean>
        - astaCreataPopUp: MutableLiveData<String>
        + CreaAstaIngleseViewModel()
        + apriPopUp(): void
        + creaAsta(String, String, String, String, String, Bitmap): void
        + creaAstaBackend(Asta_allingleseModel): void
        + onActivityResult(Uri): void
        + prelevaImmagine(Activity): void
        + setImmagine(ActivityResult, Activity): void
        + displayImage(Uri, Activity): void
        + apriPopUpInformazioni(): void
        + creaPopUpInformazioni(Activity): void
        + addCategoriaProvvisoria(String): void
        + removeCategoriaProvvisoria(String): void
        + saveCategorieScelte(): void
        + setCategoriaProvvisoria(ArrayList<String>): void
        + checkCategorieInserite(): void
        + setTornaIndietro(Boolean): void
        + premutoBack(): void
        + setAstaCreataPopUp(): void
        + checkAstaCreataPopUp(): Boolean
    }
}
package com.example.progettoingsw.repository {
class Repository {
    - acquirenteModel: AcquirenteModel
    - listaCategorieAcquirente: ArrayList<String>
    - venditoreModel: VenditoreModel
    - socialAcquirenteModelList: List<SocialAcquirenteModel>
    - socialVenditoreModelList: List<SocialVenditoreModel>
    - acquirenteEmailDaAsta: String
    - venditoreEmailDaAsta: String
    - nomeSocialSelezionato: String
    - nomeLinkSelezionato: String
    - leMieAsteUtenteAttuale: Boolean
    - listaSocialAcquirenteRecuperati: ArrayList<SocialAcquirenteModel>
    - listaSocialVenditoreRecuperati: ArrayList<SocialVenditoreModel>
    - listaCategorieVenditore: ArrayList<String>
    - categoriaSelezionata: String
    - backendUrl: String
    - questaRepository: Repository
    - listaAsteAllIngleseInScadenza: ArrayList<Asta_allingleseModel>
    - listaAsteAllIngleseCategoriaNome: ArrayList<Asta_allingleseModel>
    - listaAsteAllIngleseNuove: ArrayList<Asta_allingleseModel>
    - listaAsteAlRibassoCategoriaNome: ArrayList<Asta_alribassoModel>
    - listaAsteAlRibassoNuove: ArrayList<Asta_alribassoModel>
    - listaAsteInversaInScadenza: ArrayList<Asta_inversaModel>
    - listaAsteInversaCategoriaNome: ArrayList<Asta_inversaModel>
    - listaAsteInversaNuove: ArrayList<Asta_inversaModel>
    - notificaAcquirenteScelta: NotificheAcquirenteModel
    - notificaVenditoreScelta: NotificheVenditoreModel
    - nome_socialAcquirenteSelezionato: String
    - link_socialAcquirenteSelezionato: String
    - asta_allingleseSelezionata: Asta_allingleseModel
    - asta_alribassoSelezionata: Asta_alribassoModel
    - asta_inversaSelezionata: Asta_inversaModel
    + getInstance(): Repository
    + deleteRepository(): void
}
class Asta_allingleseRepository {
+ getAste_allingleseScadenzaRecenteBackend(OnGetAsteScadenzaRecenteListener): void
    + getAste_allingleseNuoveBackend(OnGetAsteNuoveListener): void
    + getAste_allingleseCategoriaNomeBackend(ArrayList<String>, OnGetAsteCategoriaNomeListener): void
    + partecipaAsta_allinglese(Long, String, String, String, String, OnPartecipazioneAstaIngleseListener): void
    + trovaAsta_allinglese(Long, OnTrovaAstaIngleseListener): void
    + verificaAstaIngleseInPreferiti(String, Long, OnVerificaAstaIngleseInPreferitiListener): void
    + inserimentoAstaInPreferiti(Long, String, OnInserimentoAstaIngleseInPreferitiListener): void
    + eliminazioneAstaInPreferiti(Long, String, OnEliminazioneAstaIngleseInPreferitiListener): void
    + getAsteInglesePreferite(String, OnGetAstePreferiteListener): void
    + saveAsta_inglese(Asta_allingleseModel, ArrayList<String>, OnInserimentoAstaIngleseListener): void
    + getEmailVincente(String, Long, OnGetEmailVincenteListener): void
    + getAstePerRicerca(String, ArrayList<String>, String, OnGetAstePerRicercaListener): void
    + OnGetAsteScadenzaRecenteListener
    + OnGetAsteNuoveListener
    + OnGetAsteCategoriaNomeListener
    + OnPartecipazioneAstaIngleseListener
    + OnTrovaAstaIngleseListener
    + OnVerificaAstaIngleseInPreferitiListener
    + OnInserimentoAstaIngleseInPreferitiListener
    + OnEliminazioneAstaIngleseInPreferitiListener
    + OnGetAstePreferiteListener
    + OnInserimentoAstaIngleseListener
    + OnGetEmailVincenteListener
    + OnGetAstePerRicercaListener
    - GetAsteScadenzaRecenteTask
    - GetAsteNuoveTask
    - GetAsteCategoriaNomeTask
    - PartecipaAsta_allingleseTask
    - trovaAsta_allingleseTask
    - verificaAsta_allingleseInPreferitiTask
    - inserimentoAsta_allingleseInPreferitiTask
    - eliminazioneAsta_allingleseInPreferitiTask
    - GetAsteInglesePreferiteTask
    - inserimentoAsta_ingleseTask
    - GetEmailVincenteTask
    - GetAstePerRicercaTask
    + base64ToByteArray(String): byte[]
    + byteArrayToBase64(byte[]): String
}
}

package com.example.progettoingsw.model {
    class Asta_allingleseModel {
        - id: Long
        - nome: String
        - descrizione: String
        - path_immagine: byte[]
        - baseAsta: float
        - intervalloTempoOfferte: String
        - intervalloOfferteBase: String
        - rialzoMin: float
        - prezzoAttuale: float
        - condizione: String
        - id_venditore: String

        + Asta_allingleseModel()
        + Asta_allingleseModel(Long, String, String, byte[], float, String,
         String, float, float, String, String)
        + Asta_allingleseModel(String, String, byte[], float, String,
         String, float, float, String, String)
        + getId(): Long
        + setId(Long): void
        + getNome(): String
        + setNome(String): void
        + getDescrizione(): String
        + setDescrizione(String): void
        + getPath_immagine(): byte[]
        + setPath_immagine(byte[]): void
        + getBaseAsta(): float
        + setBaseAsta(float): void
        + getIntervalloTempoOfferte(): String
        + setIntervalloTempoOfferte(String): void
        + getIntervalloOfferteBase(): String
        + setIntervalloOfferteBase(String): void
        + getRialzoMin(): float
        + setRialzoMin(float): void
        + getPrezzoAttuale(): float
        + setPrezzoAttuale(float): void
        + getCondizione(): String
        + setCondizione(String): void
        + getId_venditore(): String
        + setId_venditore(String): void
    }
}
VenditoreAstaInglese --> PopUpAggiungiCategorieAsta
VenditoreAstaInglese --> CreaAstaIngleseViewModel
CreaAstaIngleseViewModel --> Repository
CreaAstaIngleseViewModel --> Asta_allingleseRepository
CreaAstaIngleseViewModel --> Asta_allingleseModel



@enduml